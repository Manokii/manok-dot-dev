name: DB Migrate
run-name: DB Migrate
on:
  workflow_dispatch:
    inputs:
      env:
        description: "Envinronment"
        required: true
        default: "staging"
        type: choice
        options:
          - prod
          - staging

jobs:
  migrate-db:
    environment: ${{ inputs.env }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3

      - name: Load secret
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          POSTGRES_URL_NON_POOLING: ${{ format('{0}{1}{2}', 'op://cli-', inputs.env, '/db/url_non_pooling') }}

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.7.0
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Migrate DB
        run: tsx ./db/migrate.ts
